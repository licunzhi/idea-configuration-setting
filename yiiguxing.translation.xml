<application>
  <component name="AppStorage">
    <histories>
      <item value="exclusive" />
      <item value="The following code shows examples using var:" />
      <item value="Try-with-resources variable" />
      <item value="Index variables declared in traditional for loops" />
      <item value="Enhanced for-loop indexes" />
      <item value="Local variable declarations with initializers" />
      <item value="var can be used for the following types of variables:" />
      <item value="var is a reserved type name, not a keyword, which means that existing code that uses var as a variable, method, or package name is not affected. However, code that uses var as a class or interface name is affected and the class or interface needs to be renamed." />
      <item value="var is a reserved type name, not a keyword, which means that existing code that uses" />
      <item value="Using this identifier, the type of the variable is inferred from the context. The code from the previous example can be rewritten as shown in the following example:" />
      <item value="A new identifier named var is now available for local variables with non-null initializers." />
      <item value="Code such as that shown in the following example seems redundant and makes the code harder to read." />
      <item value="Local-Variable Type Inference" />
      <item value="which makes code more readable and reduces the amount of required boilerplate code." />
      <item value="Java SE 10 introduces support for inferring the type of local variables from the context,  &#10;which makes code more readable and reduces the amount of required boilerplate  &#10;code." />
      <item value="Java Language Changes for Java SE 10" />
      <item value="enhancements" />
      <item value="JDK 9 includes installer enhancements for Microsoft Windows and macOS platforms." />
      <item value="区县" />
      <item value="指标" />
      <item value="Plugins expose the full potential of the webpack engine to third-party developers. Using staged build callbacks, developers can introduce their own behaviors into the webpack build process. Building plugins is a bit more advanced than building loaders, because you'll need to understand some of the webpack low-level internals to hook into them. Be prepared to read some source code!" />
      <item value="function" />
      <item value="专题文件下载" />
      <item value="pixels" />
      <item value="carefully" />
      <item value="merge" />
      <item value="star merge push" />
      <item value="关键流程" />
      <item value="无用的表格" />
      <item value="溢出" />
      <item value="梨形" />
      <item value="梨子" />
      <item value="球" />
      <item value="High level representation of a workbook.  This is the first object most users&#10; * will construct whether they are reading or writing a workbook.  It is also the&#10; * top level object for creating new sheets/etc." />
      <item value="模板" />
      <item value="封面" />
      <item value="专题" />
      <item value="专题管理" />
      <item value="烟花" />
      <item value="anticlockwise" />
      <item value="小球" />
      <item value="Plain" />
      <item value="subtract" />
      <item value="divide" />
      <item value="Bearer" />
      <item value="街道人口分布" />
      <item value="a" />
      <item value="居住地分析" />
      <item value="流动人口变化" />
      <item value="地区性别分布" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="254" />
        <entry key="ENGLISH" value="255" />
        <entry key="LITHUANIAN" value="2" />
        <entry key="ROMANIAN" value="2" />
        <entry key="BENGALI" value="1" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="HUNGARIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="keepFormat" value="true" />
    <option name="phoneticFontFamily" value="Consolas" />
    <option name="primaryFontFamily" value="Consolas" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="primaryLanguage" value="ENGLISH" />
      </youdao-translate>
    </option>
  </component>
</application>